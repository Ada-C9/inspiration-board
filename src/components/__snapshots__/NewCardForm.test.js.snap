// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NewCardForm that it matches an existing snapshot 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <NewCardForm
    addCardCallback={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": NewCardForm {
      "_reactInternalFiber": FiberNode {
        "_debugID": 5,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "addCardCallback": [Function],
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "addCardCallback": [Function],
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "addCardCallback": [Function],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form>
                                    <div>
                                                      <label
                                                                        for="text"
                                                      >
                                                                        Text
                                                      </label>
                                                      <input
                                                                        type="text"
                                                                        name="text"
                                                                        value=""
                                                      />
                                    </div>
                                    <div>
                                                      <label
                                                                        for="emoji"
                                                      >
                                                                        Emoji
                                                      </label>
                                                      <input
                                                                        type="text"
                                                                        name="emoji"
                                                                        value=""
                                                      />
                                    </div>
                                    <div>
                                                      <input
                                                                        type="submit"
                                                      />
                                    </div>
                  </form>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "addCardCallback": [Function],
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "addCardCallback": [Function],
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "addCardCallback": [Function],
                                              }
                }
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <form>
                                <div>
                                                <label
                                                                for="text"
                                                >
                                                                Text
                                                </label>
                                                <input
                                                                type="text"
                                                                name="text"
                                                                value=""
                                                />
                                </div>
                                <div>
                                                <label
                                                                for="emoji"
                                                >
                                                                Emoji
                                                </label>
                                                <input
                                                                type="text"
                                                                name="emoji"
                                                                value=""
                                                />
                                </div>
                                <div>
                                                <input
                                                                type="submit"
                                                />
                                </div>
                </form>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "addCardCallback": [Function],
                                                    }
                  }
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addCardCallback": [Function],
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "addCardCallback": [Function],
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
            "lineNumber": 44,
          },
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
              "lineNumber": 45,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 10,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                "lineNumber": 46,
              },
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "Text",
                "htmlFor": "text",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "Text",
                "htmlFor": "text",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 11,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                  "lineNumber": 47,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "name": "text",
                  "onChange": [Function],
                  "type": "text",
                  "value": "",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "name": "text",
                  "onChange": [Function],
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <input
                  type="text"
                  name="text"
                  value=""
/>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <label
                for="text"
>
                Text
</label>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "label",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <label
                  htmlFor="text"
>
                  Text
</label>,
                <input
                  name="text"
                  onChange={[Function]}
                  type="text"
                  value=""
/>,
              ],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <label
                  htmlFor="text"
>
                  Text
</label>,
                <input
                  name="text"
                  onChange={[Function]}
                  type="text"
                  value=""
/>,
              ],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                "lineNumber": 52,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 12,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                  "lineNumber": 53,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Emoji",
                  "htmlFor": "emoji",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Emoji",
                  "htmlFor": "emoji",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 13,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                    "lineNumber": 54,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "name": "emoji",
                    "onChange": [Function],
                    "type": "text",
                    "value": "",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "name": "emoji",
                    "onChange": [Function],
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <input
                    type="text"
                    name="emoji"
                    value=""
/>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <label
                  for="emoji"
>
                  Emoji
</label>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "label",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <label
                    htmlFor="emoji"
>
                    Emoji
</label>,
                  <input
                    name="emoji"
                    onChange={[Function]}
                    type="text"
                    value=""
/>,
                ],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <label
                    htmlFor="emoji"
>
                    Emoji
</label>,
                  <input
                    name="emoji"
                    onChange={[Function]}
                    type="text"
                    value=""
/>,
                ],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                  "lineNumber": 59,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 14,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                    "lineNumber": 59,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "type": "submit",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "type": "submit",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <input
                    type="submit"
/>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <input
                    type="submit"
/>,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <input
                    type="submit"
/>,
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div>
                  <input
                                    type="submit"
                  />
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div>
                <label
                                for="emoji"
                >
                                Emoji
                </label>
                <input
                                type="text"
                                name="emoji"
                                value=""
                />
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "stateNode": <div>
              <label
                            for="text"
              >
                            Text
              </label>
              <input
                            type="text"
                            name="text"
                            value=""
              />
</div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <div>
                <label
                                htmlFor="text"
                >
                                Text
                </label>
                <input
                                name="text"
                                onChange={[Function]}
                                type="text"
                                value=""
                />
</div>,
              <div>
                <label
                                htmlFor="emoji"
                >
                                Emoji
                </label>
                <input
                                name="emoji"
                                onChange={[Function]}
                                type="text"
                                value=""
                />
</div>,
              <div>
                <input
                                type="submit"
                />
</div>,
            ],
            "onSubmit": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <div>
                <label
                                htmlFor="text"
                >
                                Text
                </label>
                <input
                                name="text"
                                onChange={[Function]}
                                type="text"
                                value=""
                />
</div>,
              <div>
                <label
                                htmlFor="emoji"
                >
                                Emoji
                </label>
                <input
                                name="emoji"
                                onChange={[Function]}
                                type="text"
                                value=""
                />
</div>,
              <div>
                <input
                                type="submit"
                />
</div>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "return": [Circular],
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": <form>
            <div>
                        <label
                                    for="text"
                        >
                                    Text
                        </label>
                        <input
                                    type="text"
                                    name="text"
                                    value=""
                        />
            </div>
            <div>
                        <label
                                    for="emoji"
                        >
                                    Emoji
                        </label>
                        <input
                                    type="text"
                                    name="emoji"
                                    value=""
                        />
            </div>
            <div>
                        <input
                                    type="submit"
                        />
            </div>
</form>,
          "tag": 5,
          "treeBaseTime": 0,
          "type": "form",
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "addCardCallback": [Function],
        },
        "memoizedState": Object {
          "emoji": "",
          "text": "",
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "addCardCallback": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "addCardCallback": [Function],
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "addCardCallback": [Function],
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "addCardCallback": [Function],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form>
                                    <div>
                                                      <label
                                                                        for="text"
                                                      >
                                                                        Text
                                                      </label>
                                                      <input
                                                                        type="text"
                                                                        name="text"
                                                                        value=""
                                                      />
                                    </div>
                                    <div>
                                                      <label
                                                                        for="emoji"
                                                      >
                                                                        Emoji
                                                      </label>
                                                      <input
                                                                        type="text"
                                                                        name="emoji"
                                                                        value=""
                                                      />
                                    </div>
                                    <div>
                                                      <input
                                                                        type="submit"
                                                      />
                                    </div>
                  </form>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "addCardCallback": [Function],
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "addCardCallback": [Function],
                                                                }
                      }
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "addCardCallback": [Function],
                                              }
                }
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <form>
                                <div>
                                                <label
                                                                for="text"
                                                >
                                                                Text
                                                </label>
                                                <input
                                                                type="text"
                                                                name="text"
                                                                value=""
                                                />
                                </div>
                                <div>
                                                <label
                                                                for="emoji"
                                                >
                                                                Emoji
                                                </label>
                                                <input
                                                                type="text"
                                                                name="emoji"
                                                                value=""
                                                />
                                </div>
                                <div>
                                                <input
                                                                type="submit"
                                                />
                                </div>
                </form>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "addCardCallback": [Function],
                                                    }
                  }
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addCardCallback": [Function],
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "addCardCallback": [Function],
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "onFormSubmit": [Function],
      "onInputChange": [Function],
      "props": Object {
        "addCardCallback": [Function],
      },
      "refs": Object {},
      "state": Object {
        "emoji": "",
        "text": "",
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "addCardCallback": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": <form>
        <div>
                <label
                        for="text"
                >
                        Text
                </label>
                <input
                        type="text"
                        name="text"
                        value=""
                />
        </div>
        <div>
                <label
                        for="emoji"
                >
                        Emoji
                </label>
                <input
                        type="text"
                        name="emoji"
                        value=""
                />
        </div>
        <div>
                <input
                        type="submit"
                />
        </div>
</form>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <label
                        htmlFor="text"
            >
                        Text
            </label>
            <input
                        name="text"
                        onChange={[Function]}
                        type="text"
                        value=""
            />
</div>,
          <div>
            <label
                        htmlFor="emoji"
            >
                        Emoji
            </label>
            <input
                        name="emoji"
                        onChange={[Function]}
                        type="text"
                        value=""
            />
</div>,
          <div>
            <input
                        type="submit"
            />
</div>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <div>
            <label
                        for="text"
            >
                        Text
            </label>
            <input
                        type="text"
                        name="text"
                        value=""
            />
</div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="text"
>
                Text
</label>,
              <input
                name="text"
                onChange={[Function]}
                type="text"
                value=""
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <label
                for="text"
>
                Text
</label>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Text",
                "htmlFor": "text",
              },
              "ref": null,
              "rendered": Array [
                "Text",
              ],
              "type": "label",
            },
            Object {
              "instance": <input
                type="text"
                name="text"
                value=""
/>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "text",
                "onChange": [Function],
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": <div>
            <label
                        for="emoji"
            >
                        Emoji
            </label>
            <input
                        type="text"
                        name="emoji"
                        value=""
            />
</div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="emoji"
>
                Emoji
</label>,
              <input
                name="emoji"
                onChange={[Function]}
                type="text"
                value=""
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <label
                for="emoji"
>
                Emoji
</label>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Emoji",
                "htmlFor": "emoji",
              },
              "ref": null,
              "rendered": Array [
                "Emoji",
              ],
              "type": "label",
            },
            Object {
              "instance": <input
                type="text"
                name="emoji"
                value=""
/>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "emoji",
                "onChange": [Function],
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": <div>
            <input
                        type="submit"
            />
</div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              type="submit"
/>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <input
                type="submit"
/>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "type": "submit",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "input",
            },
          ],
          "type": "div",
        },
      ],
      "type": "form",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": NewCardForm {
        "_reactInternalFiber": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addCardCallback": [Function],
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "addCardCallback": [Function],
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addCardCallback": [Function],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <form>
                                        <div>
                                                            <label
                                                                                for="text"
                                                            >
                                                                                Text
                                                            </label>
                                                            <input
                                                                                type="text"
                                                                                name="text"
                                                                                value=""
                                                            />
                                        </div>
                                        <div>
                                                            <label
                                                                                for="emoji"
                                                            >
                                                                                Emoji
                                                            </label>
                                                            <input
                                                                                type="text"
                                                                                name="emoji"
                                                                                value=""
                                                            />
                                        </div>
                                        <div>
                                                            <input
                                                                                type="submit"
                                                            />
                                        </div>
                    </form>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "addCardCallback": [Function],
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "addCardCallback": [Function],
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "addCardCallback": [Function],
                                                    }
                  }
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form>
                                    <div>
                                                      <label
                                                                        for="text"
                                                      >
                                                                        Text
                                                      </label>
                                                      <input
                                                                        type="text"
                                                                        name="text"
                                                                        value=""
                                                      />
                                    </div>
                                    <div>
                                                      <label
                                                                        for="emoji"
                                                      >
                                                                        Emoji
                                                      </label>
                                                      <input
                                                                        type="text"
                                                                        name="emoji"
                                                                        value=""
                                                      />
                                    </div>
                                    <div>
                                                      <input
                                                                        type="submit"
                                                      />
                                    </div>
                  </form>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "addCardCallback": [Function],
                                                          }
                    }
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "addCardCallback": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "addCardCallback": [Function],
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
              "lineNumber": 44,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                "lineNumber": 45,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                  "lineNumber": 46,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Text",
                  "htmlFor": "text",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Text",
                  "htmlFor": "text",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                    "lineNumber": 47,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "name": "text",
                    "onChange": [Function],
                    "type": "text",
                    "value": "",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "name": "text",
                    "onChange": [Function],
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <input
                    type="text"
                    name="text"
                    value=""
/>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <label
                  for="text"
>
                  Text
</label>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "label",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <label
                    htmlFor="text"
>
                    Text
</label>,
                  <input
                    name="text"
                    onChange={[Function]}
                    type="text"
                    value=""
/>,
                ],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <label
                    htmlFor="text"
>
                    Text
</label>,
                  <input
                    name="text"
                    onChange={[Function]}
                    type="text"
                    value=""
/>,
                ],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                  "lineNumber": 52,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 12,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                    "lineNumber": 53,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Emoji",
                    "htmlFor": "emoji",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Emoji",
                    "htmlFor": "emoji",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 13,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                      "lineNumber": 54,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "name": "emoji",
                      "onChange": [Function],
                      "type": "text",
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "name": "emoji",
                      "onChange": [Function],
                      "type": "text",
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <input
                      type="text"
                      name="emoji"
                      value=""
/>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <label
                    for="emoji"
>
                    Emoji
</label>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "label",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <label
                      htmlFor="emoji"
>
                      Emoji
</label>,
                    <input
                      name="emoji"
                      onChange={[Function]}
                      type="text"
                      value=""
/>,
                  ],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <label
                      htmlFor="emoji"
>
                      Emoji
</label>,
                    <input
                      name="emoji"
                      onChange={[Function]}
                      type="text"
                      value=""
/>,
                  ],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                    "lineNumber": 59,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 14,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/carabrennan/Brennan/AdaProjects/Week17/inspiration-board/src/components/NewCardForm.js",
                      "lineNumber": 59,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "type": "submit",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "type": "submit",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <input
                      type="submit"
/>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <input
                      type="submit"
/>,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <input
                      type="submit"
/>,
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div>
                    <input
                                        type="submit"
                    />
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div>
                  <label
                                    for="emoji"
                  >
                                    Emoji
                  </label>
                  <input
                                    type="text"
                                    name="emoji"
                                    value=""
                  />
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <div>
                <label
                                for="text"
                >
                                Text
                </label>
                <input
                                type="text"
                                name="text"
                                value=""
                />
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div>
                  <label
                                    htmlFor="text"
                  >
                                    Text
                  </label>
                  <input
                                    name="text"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                  />
</div>,
                <div>
                  <label
                                    htmlFor="emoji"
                  >
                                    Emoji
                  </label>
                  <input
                                    name="emoji"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                  />
</div>,
                <div>
                  <input
                                    type="submit"
                  />
</div>,
              ],
              "onSubmit": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <div>
                  <label
                                    htmlFor="text"
                  >
                                    Text
                  </label>
                  <input
                                    name="text"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                  />
</div>,
                <div>
                  <label
                                    htmlFor="emoji"
                  >
                                    Emoji
                  </label>
                  <input
                                    name="emoji"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                  />
</div>,
                <div>
                  <input
                                    type="submit"
                  />
</div>,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <form>
              <div>
                            <label
                                          for="text"
                            >
                                          Text
                            </label>
                            <input
                                          type="text"
                                          name="text"
                                          value=""
                            />
              </div>
              <div>
                            <label
                                          for="emoji"
                            >
                                          Emoji
                            </label>
                            <input
                                          type="text"
                                          name="emoji"
                                          value=""
                            />
              </div>
              <div>
                            <input
                                          type="submit"
                            />
              </div>
</form>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "form",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "addCardCallback": [Function],
          },
          "memoizedState": Object {
            "emoji": "",
            "text": "",
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "addCardCallback": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addCardCallback": [Function],
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "addCardCallback": [Function],
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addCardCallback": [Function],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <form>
                                        <div>
                                                            <label
                                                                                for="text"
                                                            >
                                                                                Text
                                                            </label>
                                                            <input
                                                                                type="text"
                                                                                name="text"
                                                                                value=""
                                                            />
                                        </div>
                                        <div>
                                                            <label
                                                                                for="emoji"
                                                            >
                                                                                Emoji
                                                            </label>
                                                            <input
                                                                                type="text"
                                                                                name="emoji"
                                                                                value=""
                                                            />
                                        </div>
                                        <div>
                                                            <input
                                                                                type="submit"
                                                            />
                                        </div>
                    </form>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "addCardCallback": [Function],
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "addCardCallback": [Function],
                                                                      }
                        }
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "addCardCallback": [Function],
                                                    }
                  }
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form>
                                    <div>
                                                      <label
                                                                        for="text"
                                                      >
                                                                        Text
                                                      </label>
                                                      <input
                                                                        type="text"
                                                                        name="text"
                                                                        value=""
                                                      />
                                    </div>
                                    <div>
                                                      <label
                                                                        for="emoji"
                                                      >
                                                                        Emoji
                                                      </label>
                                                      <input
                                                                        type="text"
                                                                        name="emoji"
                                                                        value=""
                                                      />
                                    </div>
                                    <div>
                                                      <input
                                                                        type="submit"
                                                      />
                                    </div>
                  </form>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "addCardCallback": [Function],
                                                          }
                    }
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "addCardCallback": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "addCardCallback": [Function],
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "onFormSubmit": [Function],
        "onInputChange": [Function],
        "props": Object {
          "addCardCallback": [Function],
        },
        "refs": Object {},
        "state": Object {
          "emoji": "",
          "text": "",
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "addCardCallback": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": <form>
          <div>
                    <label
                              for="text"
                    >
                              Text
                    </label>
                    <input
                              type="text"
                              name="text"
                              value=""
                    />
          </div>
          <div>
                    <label
                              for="emoji"
                    >
                              Emoji
                    </label>
                    <input
                              type="text"
                              name="emoji"
                              value=""
                    />
          </div>
          <div>
                    <input
                              type="submit"
                    />
          </div>
</form>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              <label
                            htmlFor="text"
              >
                            Text
              </label>
              <input
                            name="text"
                            onChange={[Function]}
                            type="text"
                            value=""
              />
</div>,
            <div>
              <label
                            htmlFor="emoji"
              >
                            Emoji
              </label>
              <input
                            name="emoji"
                            onChange={[Function]}
                            type="text"
                            value=""
              />
</div>,
            <div>
              <input
                            type="submit"
              />
</div>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div>
              <label
                            for="text"
              >
                            Text
              </label>
              <input
                            type="text"
                            name="text"
                            value=""
              />
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  htmlFor="text"
>
                  Text
</label>,
                <input
                  name="text"
                  onChange={[Function]}
                  type="text"
                  value=""
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <label
                  for="text"
>
                  Text
</label>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Text",
                  "htmlFor": "text",
                },
                "ref": null,
                "rendered": Array [
                  "Text",
                ],
                "type": "label",
              },
              Object {
                "instance": <input
                  type="text"
                  name="text"
                  value=""
/>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "text",
                  "onChange": [Function],
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <div>
              <label
                            for="emoji"
              >
                            Emoji
              </label>
              <input
                            type="text"
                            name="emoji"
                            value=""
              />
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  htmlFor="emoji"
>
                  Emoji
</label>,
                <input
                  name="emoji"
                  onChange={[Function]}
                  type="text"
                  value=""
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <label
                  for="emoji"
>
                  Emoji
</label>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Emoji",
                  "htmlFor": "emoji",
                },
                "ref": null,
                "rendered": Array [
                  "Emoji",
                ],
                "type": "label",
              },
              Object {
                "instance": <input
                  type="text"
                  name="emoji"
                  value=""
/>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "emoji",
                  "onChange": [Function],
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <div>
              <input
                            type="submit"
              />
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                type="submit"
/>,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <input
                  type="submit"
/>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "type": "submit",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "input",
              },
            ],
            "type": "div",
          },
        ],
        "type": "form",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
